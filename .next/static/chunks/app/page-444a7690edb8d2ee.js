(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{5269:(e,t,r)=>{Promise.resolve().then(r.bind(r,2109)),Promise.resolve().then(r.bind(r,2326)),Promise.resolve().then(r.bind(r,3647)),Promise.resolve().then(r.bind(r,9930))},2326:(e,t,r)=>{"use strict";r.d(t,{AuthenticateWithRedirectCallback:()=>n.B$,ClerkLoaded:()=>n.z0,ClerkLoading:()=>n.A0,RedirectToCreateOrganization:()=>n.rm,RedirectToOrganizationProfile:()=>n.m2,RedirectToSignIn:()=>n.W5,RedirectToSignUp:()=>n.mO,RedirectToUserProfile:()=>n.eG});var n=r(9733);r(3659)},3647:(e,t,r)=>{"use strict";r.d(t,{useAuth:()=>n.As,useClerk:()=>n.ho,useEmailLink:()=>n.ui,useOrganization:()=>n.Z5,useOrganizationList:()=>n.D_,useSession:()=>n.wV,useSessionList:()=>n.g7,useSignIn:()=>n.go,useSignUp:()=>n.yC,useUser:()=>n.Jd});var n=r(9733);r(3006)},9930:(e,t,r)=>{"use strict";r.d(t,{CreateOrganization:()=>g,GoogleOneTap:()=>n.PQ,OrganizationList:()=>n.oE,OrganizationProfile:()=>m,OrganizationSwitcher:()=>n.NC,SignIn:()=>f,SignInButton:()=>n.hZ,SignInWithMetamaskButton:()=>n.M_,SignOutButton:()=>n.ct,SignUp:()=>p,SignUpButton:()=>n.Ny,UserButton:()=>n.uF,UserProfile:()=>d});var n=r(9733),a=r(2115),o=r(3659),i=r(2797),s=r(8766);let u=()=>({pagesRouter:(0,s.useRouter)()}),c=(e,t,r,o=!0)=>{let s=a.useRef(0),{pagesRouter:c}=u(),{session:l,isLoaded:h}=(0,n.wV)();(0,i.Fj)()||a.useEffect(()=>{if(!h||r&&"path"!==r||o&&!l)return;let n=new AbortController,a=()=>{let r=c?`${t}/[[...index]].tsx`:`${t}/[[...rest]]/page.tsx`;throw Error(`
Clerk: The <${e}/> component is not configured correctly. The most likely reasons for this error are:

1. The "${t}" route is not a catch-all route.
It is recommended to convert this route to a catch-all route, eg: "${r}". Alternatively, you can update the <${e}/> component to use hash-based routing by setting the "routing" prop to "hash".

2. The <${e}/> component is mounted in a catch-all route, but all routes under "${t}" are protected by the middleware.
To resolve this, ensure that the middleware does not protect the catch-all route or any of its children. If you are using the "createRouteMatcher" helper, consider adding "(.*)" to the end of the route pattern, eg: "${t}(.*)". For more information, see: https://clerk.com/docs/references/nextjs/clerk-middleware#create-route-matcher
`)};return c?c.pathname.match(/\[\[\.\.\..+]]/)||a():(async()=>{let t;if(s.current++,!(s.current>1)){try{let r=`${window.location.origin}${window.location.pathname}/${e}_clerk_catchall_check_${Date.now()}`;t=await fetch(r,{signal:n.signal})}catch(e){}(null==t?void 0:t.status)===404&&a()}})(),()=>{s.current>1&&n.abort()}},[h])},l=()=>{let e=a.useRef(),{pagesRouter:t}=u();if(t)return e.current||(e.current=t.pathname.replace(/\/\[\[\.\.\..*/,"")),e.current;let n=r(6046).usePathname,o=r(6046).useParams,i=(n()||"").split("/").filter(Boolean),s=Object.values(o()||{}).filter(e=>Array.isArray(e)).flat(1/0);return e.current||(e.current=`/${i.slice(0,i.length-s.length).join("/")}`),e.current};function h(e,t,r=!0){let n=l(),a=(0,o.yC)(e,t,{path:n});return c(e,n,a.routing,r),a}let d=Object.assign(e=>a.createElement(n.Fv,{...h("UserProfile",e)}),{...n.Fv}),g=e=>a.createElement(n.ul,{...h("CreateOrganization",e)}),m=Object.assign(e=>a.createElement(n.nC,{...h("OrganizationProfile",e)}),{...n.nC}),f=e=>a.createElement(n.Ls,{...h("SignIn",e,!1)}),p=e=>a.createElement(n.Hx,{...h("SignUp",e,!1)})},6046:(e,t,r)=>{"use strict";var n=r(6658);r.o(n,"useParams")&&r.d(t,{useParams:function(){return n.useParams}}),r.o(n,"usePathname")&&r.d(t,{usePathname:function(){return n.usePathname}}),r.o(n,"useRouter")&&r.d(t,{useRouter:function(){return n.useRouter}}),r.o(n,"useSearchParams")&&r.d(t,{useSearchParams:function(){return n.useSearchParams}})},188:(e,t,r)=>{"use strict";r.d(t,{y:()=>a});var n=r(5828);let a=(0,n.createServerReference)("7f885b6b73e2c44475ab55124c42ef7555e0c05d6d",n.callServer,void 0,n.findSourceMapURL,"invalidateCacheAction")}},e=>{var t=t=>e(e.s=t);e.O(0,[467,271,441,517,358],()=>t(5269)),_N_E=e.O()}]);